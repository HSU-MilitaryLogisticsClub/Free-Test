module Main where

import qualified Data.ByteString.Lazy as Bl

xsize = 10
ysize = 10

rs = read . show
cfold = foldr (++) []
leng4 xs = xs ++ (take (mod (length xs) 4) $ repeat 0)

fileHead = cfold [[66,77],[rs (length file), 00 , 00 , 00],[00,00],[00,00],[rs ((length fileHead)+(length infoHeader)+(length colorPallet)),00,00,00]]

infoHeader = cfold [[40,00,00,00],[xsize,00,00,00],[ysize,00,00,00],[01,00],[24,00],[00,00,00,00],[rs (length imgData),00,00,00],[00,00,00,00],[00,00,00,00],[00,00,00,00],[00,00,00,00]]

colorPallet = []

imgData = cfold $ map leng4 $ map cfold [[[255,0,0],[255,0,0],[0,255,0],[0,255,0],[0,255,0],[0,255,0],[255,255,0],[255,0,255],[0,255,255],[255,255,255]],[[255,0,0],[255,0,0],[0,255,0],[0,255,0],[0,255,0],[0,255,0],[255,255,0],[255,0,255],[0,255,255],[255,255,255]],[[255,0,0],[255,0,0],[0,255,0],[0,255,0],[0,255,0],[0,255,0],[255,255,0],[255,0,255],[0,255,255],[255,255,255]],[[255,0,0],[255,0,0],[0,255,0],[0,255,0],[0,255,0],[0,255,0],[255,255,0],[255,0,255],[0,255,255],[255,255,255]],[[255,0,0],[255,0,0],[0,255,0],[0,255,0],[0,255,0],[0,255,0],[255,255,0],[255,0,255],[0,255,255],[255,255,255]],[[255,0,0],[255,0,0],[0,255,0],[0,255,0],[0,255,0],[0,255,0],[255,255,0],[255,0,255],[0,255,255],[255,255,255]],[[255,0,0],[255,0,0],[0,255,0],[0,255,0],[0,255,0],[0,255,0],[255,255,0],[255,0,255],[0,255,255],[255,255,255]],[[255,0,0],[255,0,0],[0,255,0],[0,255,0],[0,255,0],[0,255,0],[255,255,0],[255,0,255],[0,255,255],[255,255,255]],[[255,0,0],[255,0,0],[0,255,0],[0,255,0],[0,255,0],[0,255,0],[255,255,0],[255,0,255],[0,255,255],[255,255,255]],[[255,0,0],[255,0,0],[0,255,0],[0,255,0],[0,255,0],[0,255,0],[255,255,0],[255,0,255],[0,255,255],[255,255,255]]]

file = fileHead ++ infoHeader ++ colorPallet ++ imgData

main = do
  --print $ Bl.pack file
  print "OK"
  Bl.writeFile "a.bmp" $ Bl.pack file